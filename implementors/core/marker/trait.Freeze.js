(function() {var implementors = {};
implementors["erasable"] = [{text:"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"erasable/struct.Thin.html\" title=\"struct erasable::Thin\">Thin</a>&lt;P&gt;",synthetic:true,types:["erasable::Thin"]},];
implementors["rc_borrow"] = [{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rc_borrow/struct.ArcBorrow.html\" title=\"struct rc_borrow::ArcBorrow\">ArcBorrow</a>&lt;'a, T&gt;",synthetic:true,types:["rc_borrow::ArcBorrow"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rc_borrow/struct.RcBorrow.html\" title=\"struct rc_borrow::RcBorrow\">RcBorrow</a>&lt;'a, T&gt;",synthetic:true,types:["rc_borrow::RcBorrow"]},];
implementors["rc_box"] = [{text:"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rc_box/struct.ArcBox.html\" title=\"struct rc_box::ArcBox\">ArcBox</a>&lt;T&gt;",synthetic:true,types:["rc_box::ArcBox"]},{text:"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rc_box/struct.RcBox.html\" title=\"struct rc_box::RcBox\">RcBox</a>&lt;T&gt;",synthetic:true,types:["rc_box::RcBox"]},];
implementors["rowan"] = [{text:"impl Freeze for <a class=\"struct\" href=\"rowan/struct.Kind.html\" title=\"struct rowan::Kind\">Kind</a>",synthetic:true,types:["rowan::Kind"]},{text:"impl Freeze for <a class=\"enum\" href=\"rowan/enum.Direction.html\" title=\"enum rowan::Direction\">Direction</a>",synthetic:true,types:["rowan::helpers::Direction"]},{text:"impl&lt;Node, Token&gt; Freeze for <a class=\"enum\" href=\"rowan/enum.NodeOrToken.html\" title=\"enum rowan::NodeOrToken\">NodeOrToken</a>&lt;Node, Token&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Node: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Token: Freeze,&nbsp;</span>",synthetic:true,types:["rowan::helpers::NodeOrToken"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"rowan/enum.WalkEvent.html\" title=\"enum rowan::WalkEvent\">WalkEvent</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rowan::helpers::WalkEvent"]},{text:"impl Freeze for <a class=\"struct\" href=\"rowan/green/struct.GreenBuilder.html\" title=\"struct rowan::green::GreenBuilder\">GreenBuilder</a>",synthetic:true,types:["rowan::green::builder::GreenBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"rowan/green/struct.Checkpoint.html\" title=\"struct rowan::green::Checkpoint\">Checkpoint</a>",synthetic:true,types:["rowan::green::builder::Checkpoint"]},{text:"impl Freeze for <a class=\"struct\" href=\"rowan/green/struct.GreenTreeBuilder.html\" title=\"struct rowan::green::GreenTreeBuilder\">GreenTreeBuilder</a>",synthetic:true,types:["rowan::green::builder::GreenTreeBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"rowan/green/struct.GreenNode.html\" title=\"struct rowan::green::GreenNode\">GreenNode</a>",synthetic:true,types:["rowan::green::node::GreenNode"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rowan/green/struct.Children.html\" title=\"struct rowan::green::Children\">Children</a>&lt;'a&gt;",synthetic:true,types:["rowan::green::node::Children"]},{text:"impl Freeze for <a class=\"struct\" href=\"rowan/green/struct.GreenToken.html\" title=\"struct rowan::green::GreenToken\">GreenToken</a>",synthetic:true,types:["rowan::green::token::GreenToken"]},{text:"impl&lt;Lang&gt; Freeze for <a class=\"struct\" href=\"rowan/syntax/struct.Children.html\" title=\"struct rowan::syntax::Children\">Children</a>&lt;Lang&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Lang: Freeze,&nbsp;</span>",synthetic:true,types:["rowan::syntax::node::Children"]},{text:"impl&lt;Lang&gt; Freeze for <a class=\"struct\" href=\"rowan/syntax/struct.Node.html\" title=\"struct rowan::syntax::Node\">Node</a>&lt;Lang&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Lang: Freeze,&nbsp;</span>",synthetic:true,types:["rowan::syntax::node::Node"]},{text:"impl Freeze for <a class=\"struct\" href=\"rowan/syntax/struct.Text.html\" title=\"struct rowan::syntax::Text\">Text</a>",synthetic:true,types:["rowan::syntax::text::Text"]},{text:"impl&lt;Lang&gt; Freeze for <a class=\"struct\" href=\"rowan/syntax/struct.Token.html\" title=\"struct rowan::syntax::Token\">Token</a>&lt;Lang&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Lang: Freeze,&nbsp;</span>",synthetic:true,types:["rowan::syntax::token::Token"]},{text:"impl Freeze for <a class=\"struct\" href=\"rowan/syntax/struct.Generic.html\" title=\"struct rowan::syntax::Generic\">Generic</a>",synthetic:true,types:["rowan::syntax::Generic"]},];
implementors["str_index"] = [{text:"impl Freeze for <a class=\"struct\" href=\"str_index/struct.StrIndex.html\" title=\"struct str_index::StrIndex\">StrIndex</a>",synthetic:true,types:["str_index::StrIndex"]},{text:"impl Freeze for <a class=\"struct\" href=\"str_index/struct.StrRange.html\" title=\"struct str_index::StrRange\">StrRange</a>",synthetic:true,types:["str_index::StrRange"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()